(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{375:function(t,a,s){"use strict";s.r(a);var e=s(42),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("Use better tools, do better things. You will see that "),s("code",[t._v("thexp")]),t._v(" helps a lot for your deep learning research.")]),t._v(" "),s("h2",{attrs:{id:"features"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#features"}},[t._v("#")]),t._v(" Features")]),t._v(" "),s("p",[s("code",[t._v("thexp")]),t._v(" is designed for reducing difficulty of the frequent code modification in experiments and simplify the redundant code.")]),t._v(" "),s("p",[t._v("Consequently, here shows its features:")]),t._v(" "),s("ul",[s("li",[t._v("Simplest code for "),s("strong",[t._v("Hyperparameter Configuration")]),t._v("、"),s("strong",[t._v("Dataset Building")]),t._v("、"),s("strong",[t._v("Module Checkpoint")]),t._v("、"),s("strong",[t._v("Meter and Log")]),t._v(".")]),t._v(" "),s("li",[t._v("Include Git support and random seed management. You can "),s("strong",[t._v("reset")]),t._v(" and "),s("strong",[t._v("archive")]),t._v(" and "),s("strong",[t._v("reimplement your experiments")]),t._v(" by using simple console command.")]),t._v(" "),s("li",[t._v("Include a "),s("strong",[t._v("deep learning experiment code templete")]),t._v(". You can add any experiments with linearly increasing code complexity by using it.")]),t._v(" "),s("li",[t._v("The framework follows the design paradigm of "),s("strong",[t._v("convention over configuration")]),t._v(", the more you follow the convention, the more the framework will do for you.")])]),t._v(" "),s("blockquote",[s("p",[t._v("Better use Pycharm.")])]),t._v(" "),s("h2",{attrs:{id:"install"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#install"}},[t._v("#")]),t._v(" Install")]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("pip "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" thexp\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("or")]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://github.com/sailist/thexp\n\npython setup.py "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("h3",{attrs:{id:"test"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#test"}},[t._v("#")]),t._v(" test")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("python -m pytest # or python3 -m pytest\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("blockquote",[s("p",[t._v("Only a part of code have unit test.")])]),t._v(" "),s("h2",{attrs:{id:"introduction"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#introduction"}},[t._v("#")]),t._v(" Introduction")]),t._v(" "),s("p",[t._v("Unlike other pytorch tools, "),s("code",[t._v("thexp")]),t._v(" mainly designed for research, there are two core idea of it:")]),t._v(" "),s("ol",[s("li",[t._v("Reduce repetition of your code.")]),t._v(" "),s("li",[t._v("Make all operations "),s("strong",[t._v("recordable")]),t._v(", "),s("strong",[t._v("resumable")]),t._v(", "),s("strong",[t._v("analyzable")]),t._v(".")])]),t._v(" "),s("p",[t._v("Your can click "),s("RouterLink",{attrs:{to:"/tutorial/"}},[t._v("Tutorial")]),t._v(" to learn the basic use of this framework. After that, you can view "),s("RouterLink",{attrs:{to:"/cookbook/"}},[t._v("Cookbook")]),t._v(" to see some details of this library.")],1),t._v(" "),s("p",[t._v("A suggested learning order may be：")]),t._v(" "),s("ul",[s("li",[t._v("Learn highly frequency used module: "),s("a",{attrs:{href:"/thexp/params"}},[t._v("Define hyperparameter(Params)")]),t._v("、"),s("a",{attrs:{href:"/thexp/meter"}},[t._v("Record variable(Meter)")]),t._v("、"),s("a",{attrs:{href:"/thexp/logger"}},[t._v("Log(Logger)")]),t._v("、"),s("a",{attrs:{href:"/thexp/bundler"}},[t._v("Reshape your dataloader(DataBundler)")]),t._v(" and their aggregation "),s("a",{attrs:{href:"/thexp/trainer"}},[t._v("Trainer")]),t._v(".")]),t._v(" "),s("li",[t._v("Learn how to manage/analyse your experiment by "),s("a",{attrs:{href:"/thexp/exp"}},[t._v("Config")]),t._v(" and "),s("a",{attrs:{href:"/thexp/exp"}},[t._v("Experiment")])]),t._v(" "),s("li",[t._v("Learn how to simple manage random seed by "),s("a",{attrs:{href:"/thexp/rnd"}},[t._v("RndManager")]),t._v(" and to create your dataset elegantly by "),s("a",{attrs:{href:"/thexp/builder"}},[t._v("DatasetBuilder")])])]),t._v(" "),s("p",[t._v("After learning above contents, you can view "),s("RouterLink",{attrs:{to:"/cookbook/"}},[t._v("Cookbook")]),t._v(" to learn the use of "),s("a",{attrs:{href:"/thexp/structure"}},[t._v("tempelet code")]),t._v(" and other "),s("a",{attrs:{href:"/thexp/details"}},[t._v("details")]),t._v(".")],1),t._v(" "),s("h2",{attrs:{id:"examples"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#examples"}},[t._v("#")]),t._v(" Examples")]),t._v(" "),s("p",[t._v("Before start, maybe you'd like to see some simple examples to learn what can "),s("code",[t._v("thexp")]),t._v(" do.")]),t._v(" "),s("h3",{attrs:{id:"define-hyperparameters"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#define-hyperparameters"}},[t._v("#")]),t._v(" Define hyperparameters")]),t._v(" "),s("p",[t._v("By use "),s("code",[t._v("thexp.frame.Params")]),t._v(", you can define hyperparameters simply. See "),s("a",{attrs:{href:"/thexp/params"}},[t._v("Params")]),t._v(" for details.")]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" thexp "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Params\nparams "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Params"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nparams"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("batch_size "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("128")]),t._v("\nparams"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("from_args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# from command args")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" python ap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("py "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("optim"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lr"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.001")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("epoch"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("400")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("dataset"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("cifar10 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("k"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("h3",{attrs:{id:"record-variable"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#record-variable"}},[t._v("#")]),t._v(" Record variable")]),t._v(" "),s("p",[t._v("By using "),s("code",[t._v("thexp.frame.Meter")]),t._v(", you can record variable and update its average value with as little code as possible. See "),s("a",{attrs:{href:"/thexp/meter"}},[t._v("Meter")]),t._v(" for details.")]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" thexp "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Meter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("AvgMeter\n\nam "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" AvgMeter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# use for record average")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" j "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("range")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    meter "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Meter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    meter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("percent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("meter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("c_"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# when print, format 'c' as a percentage")]),t._v("\n    meter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n    meter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2"')]),t._v("\n    meter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" torch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rand"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n    meter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("loss "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" loss_fn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    meter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rand "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" torch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rand"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    meter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("d "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# you can record any type of variable")]),t._v("\n    meter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("e "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"6"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    am"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("update"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("meter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Update current value in meter. Average value will be calculated automatic by declaration and the type of the variable.")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("am"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br")])]),s("h3",{attrs:{id:"analyse-your-experiments"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#analyse-your-experiments"}},[t._v("#")]),t._v(" Analyse your experiments")]),t._v(" "),s("p",[t._v("Search experiments, compare it and plot curve or parallel. You can see "),s("a",{attrs:{href:"/thexp/exp"}},[t._v("Experiment")]),t._v(" for details.")]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" thexp "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Q"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" C\n\ntestq "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    Q"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("repos"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Query all repositories globaly.")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exps"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'sup'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Query all experiments from all repositories, then search experiments by name 'sup'")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tests"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Query all tests from experiment 'sup'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nbd "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    testq"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("success"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Filter tests that end without any exception.(i.e. success)")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("boards"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Query all board(tensorboard item) from success tests.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("scalar_tags"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# View scalar tags")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Draw parallel of the tests with meter `top1_test_`, `lr`, `epoch`")]),t._v("\nbd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parallel"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("C"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("meter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("top1_test_"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            C"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("param"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"optim.args.lr"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# learning rate")]),t._v("\n            C"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("param"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("epoch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br")])]),s("blockquote",[s("img",{attrs:{src:t.$withBase("/img/query_parallel.png"),alt:"parallel"}})]),t._v(" "),s("p",[t._v("and")]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("bd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("boards"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("line"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'top1_test_'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("blockquote",[s("img",{attrs:{src:t.$withBase("/img/query_line.png"),alt:"curve"}})]),t._v(" "),s("h2",{attrs:{id:"contribute"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#contribute"}},[t._v("#")]),t._v(" Contribute")]),t._v(" "),s("p",[s("code",[t._v("thexp")]),t._v(" will be better in the future, but there are still some lack exists currently, including:")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("Lack of more detail guide")]),t._v(" because of the lacking of developer's energy and time.")]),t._v(" "),s("li",[s("strong",[t._v("Lack more tests")]),t._v(". unit test only covers a part of the code. I hope I fixed all bugs during my using of it, but there is no guarantee of it. The compatibility is also unguaranteed. So, welcome to "),s("a",{attrs:{href:"https://github.com/sailist/thexp/issues",target:"_blank",rel:"noopener noreferrer"}},[t._v("issus"),s("OutboundLink")],1),t._v(" it if you find it.")]),t._v(" "),s("li",[s("strong",[t._v("Lack of development experience")]),t._v(". So the version number may be confused.")])]),t._v(" "),s("p",[t._v("Thanks for all contribution.")])])}),[],!1,null,null,null);a.default=n.exports}}]);