(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{394:function(s,a,t){"use strict";t.r(a);var e=t(42),n=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"细节"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#细节"}},[s._v("#")]),s._v(" 细节")]),s._v(" "),t("p",[s._v("本节提供该框架的一些实现细节的介绍。")]),s._v(" "),t("h2",{attrs:{id:"params-规范"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#params-规范"}},[s._v("#")]),s._v(" Params 规范")]),s._v(" "),t("p",[s._v("当使用命令行参数接受超参时，如果出现了未提前在 params 中定义好的变量名，那么会抛出如下警告：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v(".....: UserWarning: xxx is a new param,please check your spelling. it's more recommended to define in advance.))\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("考虑到在试验过程中经常存在命令行参数敲错的情形，而这种错误有时并不会影响试验的正常运行（比如已经定义了默认参数，该命令行参数只是额外新增了一个变量），但会导致试验使用的超参数不符合预期，如果你的单次程序运行周期很长，出现这种问题会很令人沮丧（也有可能甚至无法发现这个错误）。因此，当通过命令行参数方式定义超参数时候，会对新设置的参数抛出警告用于提醒。")]),s._v(" "),t("p",[s._v("基于这个原因，强烈建议使用者在前定义好所有的超参数，这有利于命令行参数时的错误识别和一些其他因素。")]),s._v(" "),t("h2",{attrs:{id:"环境变量控制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#环境变量控制"}},[s._v("#")]),s._v(" 环境变量控制")]),s._v(" "),t("p",[s._v("基于 "),t("code",[s._v("thexp")]),s._v(" 运行的实验和 "),t("code",[s._v("Git")]),s._v(" 控制息息相关，但该框架在开发时候受限于作者的强迫症，仍然贴心的考虑了没有 Git 或者暂时不想用 "),t("code",[s._v("Git")]),s._v(" 的使用者。只需要在环境变量中添加相关的环境变量，就可以取消建立 Git 仓库或者禁止在实验运行开始时提交实验。")]),s._v(" "),t("p",[s._v("相关的环境变量为：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("THEXP_IGNORE_REPO # 用于禁止建立 Git 仓库\nTHEXP_COMMIT_DISABLE # 用于禁止在 Experiment 运行时提交\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("blockquote",[t("p",[s._v("如果你使用了"),t("code",[s._v("Trainer")]),s._v("，那么在 Params 中存在一个变量为 "),t("code",[s._v("git_commit")]),s._v("，将其值设置为False，会在 "),t("code",[s._v("Trainer")]),s._v(" 初始化的时候添加禁止提交的环境变量。")])]),s._v(" "),t("h2",{attrs:{id:"运行环境判断"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#运行环境判断"}},[s._v("#")]),s._v(" 运行环境判断")]),s._v(" "),t("p",[s._v("在作者做相关实验的过程中，存在一些需要判断本机或是远程环境，以及位于debug的需求，同时，基于这些需求，对一些超参数的设置也希望能够灵活判断，因此，"),t("code",[s._v("thexp")]),s._v(" 框架内置了一些基本的运行环境变量以供判断，这包括：")]),s._v(" "),t("ul",[t("li",[s._v("当前系统环境（win、linux、mac）")]),s._v(" "),t("li",[s._v("本机环境还是远程环境")]),s._v(" "),t("li",[s._v("是否由 Pycharm 运行，以及是否位于 Pycharm 的 Debug mode。")])]),s._v(" "),t("p",[s._v("你可以通过以下的代码快速尝试您当前的环境。")]),s._v(" "),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" pprint "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" pprint\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" thexp "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" ENV\npprint"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ENV"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("__dict__"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("输出：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("mappingproxy({'IS_LINUX': False,\n              'IS_LOCAL': True,\n              'IS_MAC': False,\n              'IS_PYCHARM': True,\n              'IS_PYCHARM_DEBUG': False,\n              'IS_REMOTE': False,\n              'IS_WIN': True,\n              ......)\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("提示")]),s._v(" "),t("p",[s._v("由于该环境测试缺乏更多的机器验证，因此可能存在误判，欢迎被误判的使用者提交相关issue。")])]),s._v(" "),t("h2",{attrs:{id:"参数规范"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参数规范"}},[s._v("#")]),s._v(" 参数规范")]),s._v(" "),t("p",[s._v("在 Meter 和 Params 中，提供了众多特性和语法糖，这是因为其内部通过Python中的魔法方法（Magic function），重定义了许多操作。而由于工程上的一些困难，要正常使用这些特性，其类内部的变量命名需要满足一条规范：")]),s._v(" "),t("p",[t("strong",[s._v("变量名前后不能有下划线（中间可以存在任意下划线）")])]),s._v(" "),t("p",[s._v("如果存在下划线，在一部分情况下，程序会直接抛出异常；而在一些不方便抛出异常的情况下，这些类提供的特性可能无法正常应用在这些变量名对应的变量上。")]),s._v(" "),t("h2",{attrs:{id:"noneitem"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#noneitem"}},[s._v("#")]),s._v(" NoneItem")]),s._v(" "),t("p",[s._v("运行下面的代码，观察输出")]),s._v(" "),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" thexp "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" Meter\nm "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Meter"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("m"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("k"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("输出")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("NoneItem()\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("NontItem")]),s._v(" "),t("p",[s._v("任何原本不在meter中的变量在获取时不会报错，而是会返回一个 "),t("code",[s._v("NoneItem")]),s._v(" 类型，该类型具有以下的特性：")]),s._v(" "),t("ul",[t("li",[s._v("noneitem == None")]),s._v(" "),t("li",[s._v("noneitem + any = any")]),s._v(" "),t("li",[s._v("noneitem - any = -any")]),s._v(" "),t("li",[s._v("noneitem * any = 1*any")]),s._v(" "),t("li",[s._v("noneitem / any = 1/any")]),s._v(" "),t("li",[s._v("任何对象和 noneitem 比较大或者小均返回 True")]),s._v(" "),t("li",[s._v("int(noneitem) = 0, float(noneitem) = 0")])])]),s._v(" "),t("p",[s._v("该类位于 "),t("code",[s._v("thexp.base_classes.trickitems")]),s._v("，提供了一些奇技淫巧感兴趣可以看一下它的实现。该特性减少了某些情况下的代码量，比如说，可控的多段 loss 相加，如下面的代码：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("all_loss = 0\nif conditiona:\n    all_loss = all_loss + a_loss\nif conditionb:\n    all_loss = all_loss + a_loss\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("如果使用meter，则会变成：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("# all_loss = 0 # 可以不用写了\nif conditiona:\n    m.all_loss = m.all_loss + m.a_loss\nif conditionb:\n    m.all_loss = m.all_loss + m.a_loss\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("div",{staticClass:"custom-block warning"},[t("p",{staticClass:"custom-block-title"},[s._v("注意")]),s._v(" "),t("p",[s._v("注意 noneitem 做运算需要放在前面，否则执行方法时调用的不是noneitem内重写的运算符。")])]),s._v(" "),t("h2",{attrs:{id:"项目目录大文件后缀"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#项目目录大文件后缀"}},[s._v("#")]),s._v(" 项目目录大文件后缀")]),s._v(" "),t("p",[s._v("在实验中临时保存在 repository 目录的文件，如果是文本文件，一般较小，Git 提交不存在问题；但如果存在一些较大的向量或模型文件，用 Git 提交它们会导致程序运行缓慢或程序目录过大。为了避免这些情况，"),t("code",[s._v("thexp")]),s._v(" 对 "),t("code",[s._v(".gitignore")]),s._v(" 文件做了补充，额外添加了以下后缀：")]),s._v(" "),t("div",{staticClass:"language-gitignore line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-gitignore"}},[t("code",[t("span",{pre:!0,attrs:{class:"token entry string"}},[t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(".pth")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token entry string"}},[t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(".npy")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token entry string"}},[t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(".ckpt")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("当您在项目目录下存放以这些为后缀的文件时，这些文件将不会被 Git 添加和提交")]),s._v(" "),t("h2",{attrs:{id:"pyecharts-支持"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pyecharts-支持"}},[s._v("#")]),s._v(" pyecharts 支持")]),s._v(" "),t("p",[s._v("此外本项目正在逐步添加对 "),t("code",[s._v("pyecharts")]),s._v(" 绘制的支持，如需使用，需要使用者自行安装。根据Python版本的不同，分别运行以下命令（本项目不支持Python3.5以下版本）")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("// 仅支持Python3.6 及以上版本\npip "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" pyecharts\n\n// 支持Python3.5 及以上版本，但缺少了一部分类型提示\npip "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" pyecharts35\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])])])}),[],!1,null,null,null);a.default=n.exports}}]);