(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{395:function(_,x,s){"use strict";s.r(x);var l=s(42),e=Object(l.a)({},(function(){var _=this,x=_.$createElement,s=_._self._c||x;return s("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[s("h1",{attrs:{id:"代码命名约定"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#代码命名约定"}},[_._v("#")]),_._v(" 代码命名约定")]),_._v(" "),s("p",[_._v("本文主要写下我在实验过程中对变量的一些命名经验，以尽可能的区分变量名，辨析用途为目的。")]),_._v(" "),s("ul",[s("li",[_._v("xxx_label : 单个标签，如对于二分类问题，一个 y_label 可能等于 1或0")]),_._v(" "),s("li",[_._v("xxx_labels: 多个标签，如 [1,0,0...,1], 结合上下文，可能代表一个batch或整个数据集")]),_._v(" "),s("li",[_._v("xxx_y/xxx_ys: 和 label/labels 的简写方法，也很推荐")]),_._v(" "),s("li",[_._v("xxx_imgs: 图片batch，一般为 x")]),_._v(" "),s("li",[_._v("xxx_inputs/xxx_in: 任意输入x作为batch")]),_._v(" "),s("li",[_._v("xxx_x/xxx_xs:")]),_._v(" "),s("li",[_._v("xxx_target: 一般而言，target和label是等价的，但我将其用来表示one-hot向量，即标签转换为one-hot之后的状态")]),_._v(" "),s("li",[_._v("xxx_targets: 类比labels，表示多个target，一般情况下维度为 "),s("code",[_._v("[batch, num_class]")])]),_._v(" "),s("li",[_._v("xxx_logits: 一般表示输入经过模型后，经过全连接层后得到的向量，此时该向量还未经过 softmax 层")]),_._v(" "),s("li",[_._v("xxx_preds: logits 经过 softmax 层之后的向量")]),_._v(" "),s("li",[_._v("xxx_w : 用于表示某loss或其他向量的权重，一般为标量")]),_._v(" "),s("li",[_._v("xxx_ws : 作用和 "),s("code",[_._v("xxx_w")]),_._v(" 类似，但表示为权重向量（一般逐个点乘一个batch的loss或之类的...")]),_._v(" "),s("li",[_._v("xxx_sche/xxx_schedule: 用于表示随训练过程变化数值的函数，通过调用该函数，能够得到 xxx_w 等权重。由于sche的区分度已经很高，因此不做注释或在某一处注释一次全称及其用途即可。")]),_._v(" "),s("li",[_._v("xxx_mask: 表示某种遮罩，一般用于对某向量使用，如 "),s("code",[_._v("tensor[x_mask]")]),_._v(" 或 "),s("code",[_._v("tensor * x_mask")])]),_._v(" "),s("li",[_._v("xxx_ids: 和 "),s("code",[_._v("xxx_mask")]),_._v(" 类似，但仅用于切片，如 "),s("code",[_._v("tensor[x_ids]")]),_._v("，"),s("code",[_._v("ids")]),_._v("切片完后向量维度不变；相应的 "),s("code",[_._v("xxx_id")]),_._v(" 切片完后向量维度减一")])]),_._v(" "),s("p",[_._v("顺便提一下，pytorch下，将一个batch的labels转换为one-hot向量的操作为：")]),_._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[_._v("torch.zeros(labels.shape[0], num_class, device=labels.device).scatter_(1, labels.view(-1, 1), 1)\n")])]),_._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[_._v("1")]),s("br")])]),s("ul",[s("li",[_._v("xxx_loss: 表示某损失函数，然后用 all_loss 来表示最终用于反向传播和优化参数的损失变量")]),_._v(" "),s("li",[_._v("xxx_loss_/xxx_losss: 一般损失均为标量，但有时会出现一些中间变量需要多次使用的情况，此时区分的话在最后加下换线或者重复最后一个字母或许是比较好的表示方法")])]),_._v(" "),s("blockquote",[s("p",[_._v("有些实现中，会将标识提前，如用 "),s("code",[_._v("loss_xxx")]),_._v("这样的方式来表示。两种方法各有好坏，标识在前面还是在后面，可能还是要结合个人习惯。人的阅读顺序是从左往右，因此区分类别重要还是区分用途重要，看个人，但更重要的是在一个项目中，甚至在所有项目中，只使用这一套，利人利己。")])])])}),[],!1,null,null,null);x.default=e.exports}}]);