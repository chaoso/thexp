from typing import Dict, Callable, Tuple

from PIL import Image
from thexp import glob
from thexp.base_classes.list import llist
from torchvision.datasets.cifar import CIFAR10

root = glob['datasets']

datasets = {
    # 'cifar10': cifar10,
}  # type:Dict[str,Callable[[bool],Tuple[llist,llist]]]


def regist_dataset(name_=None):
    def wrap(func):
        if name_ is None:
            name = func.__name__
        else:
            name = name_
        datasets[name] = func
        return func

    return wrap


@regist_dataset()
def cifar10(train=True):
    dataset = CIFAR10(root=root, train=train)
    xs = llist(Image.fromarray(i) for i in dataset.data)
    ys = llist(int(i) for i in dataset.targets)

    return xs, ys
